# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

upstream nagios  {
      server 127.0.0.1:80;
}

server {
    ### server port and name ###
    listen          *:9119;
    ssl 		on;
    server_name     nwa;
 
    ### SSL log files ###
    access_log      /var/log/nginx/ssl-access.log;
    error_log       /var/log/nginx/ssl-error.log;
 
    ### SSL cert files ###
    ssl_certificate      ssl/nagios.crt;
    ssl_certificate_key  ssl/nagios.key;
 
    ### Add SSL specific settings here ###
  
    ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers RC4:HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    keepalive_timeout    60;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;
 
    ### We want full access to SSL via backend ###
    location / {
	proxy_bind 127.0.0.1;
        proxy_pass  http://nagios;
 
    ### force timeouts if one of backend is died ##
#       proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
 
    ### Set headers ####
#       proxy_set_header        Accept-Encoding   "";
#	proxy_set_header        Host            $host;
#	proxy_set_header        X-Real-IP       $remote_addr;
#	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
 
    ### Most PHP, Python, Rails, Java App can use this header ###
	#proxy_set_header X-Forwarded-Proto https;##
	#This is better## 
#       proxy_set_header        X-Forwarded-Proto $scheme;
#	add_header              Front-End-Https   on;
 
 
    ### By default we don't want to redirect it ####
        proxy_redirect     off;
	proxy_buffering off;
}
}



#    server {
#        listen       80 default_server;
#        listen       [::]:80 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

